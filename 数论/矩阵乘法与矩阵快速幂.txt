const int mod;
const int MAX = 300;//上限
//注意矩阵下标以0开始
struct MAT
{
    int r, c;
    LL d[MAX][MAX];

    MAT(int size) //初始为单位矩阵
    {
        r=c=size;
        clr(d,0);
        for(int i=0; i<size; i++)   d[i][i]=1;
    }
    MAT(int _r,int _c) //初始为全零矩阵
    {
        r=_r,c=_c;
        clr(d,0);
    }

    friend MAT operator+(const MAT& m1,const MAT &m2);
    friend MAT operator*(const MAT& m1,const MAT &m2);
};

MAT operator+(const MAT& m1,const MAT &m2)
{
    MAT ret(m1.r,m2.c);

    for(int i=0; i<m1.r; i++)
        for(int j=0; j<m1.c; j++)
            ret.d[i][j] = (m1.d[i][j] + m2.d[i][j])%mod;
    return ret;
}

MAT operator*(const MAT& m1,const MAT &m2)
{
    MAT ret(m1.r,m2.c);
    for(int i=0; i<m1.r; i++)
        for(int j=0; j<m1.c; j++)
            if(m1.d[i][j])
                for(int k=0; k!=m2.c; k++)
                    if(m2.d[j][k])
                        ret.d[i][k] = (ret.d[i][k] + (m1.d[i][j] * m2.d[j][k]))%mod;
    return ret;
}

MAT pow(MAT &a, int p)
{
    MAT t = a, ans(a.r);
    for(; p; p>>=1)
    {
        if(p & 1)   ans = ans * t;
        t = t * t;
    }
    return ans;
}

MAT sum(MAT &a, int p)
{
    int r = a.r;
    MAT t(2*r), ret(r);
    for(int i=0; i<r; i++)
        for(int j=0; j<r; j++)
            t.d[i][j] = t.d[i][j + r] = a.d[i][j];
    t = pow(t,p);

    for(int i=0; i<r; i++)
        for(int j=0; j<r; j++)
            ret.d[i][j] = t.d[i][j + r];
    return ret;
}