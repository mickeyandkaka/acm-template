//1~n的欧拉函数
const int MAX = 1E7;
bool isprm[MAX+10];
int prm[MAX+10], phi[MAX+10];

int calphi(int n)
{
    phi[1] = 1;
    clr(isprm, true);
    int cnt = 0;
    for(int i=2; i<=n; i++)
    {
        if(isprm[i])    prm[++cnt] = i, phi[i] = i-1;
        for(int j=1; j<=cnt && (LL)i*prm[j]<=n; j++)
        {
            isprm[ i*prm[j] ] = false;
            if(i % prm[j] == 0)
            {
                phi[ i*prm[j] ] = phi[i] * prm[j] ;
                break;
            }
            else    phi[ i*prm[j] ] = phi[i] * (prm[j] - 1);
        }
    }
    return cnt;
}

//x的欧拉函数 事先要sqrt(x)的质数表
int euler(int x)
{
    int res = x;
    for(int i=1; prime[i]<=sqrt(x*1.0)+1 && i<=tot; i++)
        if(x%prime[i] == 0)
        {
            res = res/prime[i]*(prime[i]-1);
            while(x%prime[i] == 0) x/=prime[i];
        }
    if(x>1) res = res/x*(x-1);
    return res;e
}